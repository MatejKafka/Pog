POG: A PORTABLE PACKAGE MANAGER
===============================

Pog is a fast, in-development package manager for Windows, managing encapsulated, portable
applications. As a frequent Linux user, I always enjoyed the hassle-free experience of
installing software. Windows has multiple package managers, but other than Scoop, all of them
are unreasonably slow and fiddly, and Scoop is a bit too minimal for my taste and does not
fully utilize portable packages. Pog is an attempt to provide Linux-level user experience
in a Windows-native way.

Unlike most existing Windows package managers, which delegate to existing program installers,
Pog installs packages from static archives with a readable package manifest. The packages are
encapsulated by redirecting their default data directories to a package-local directory,
providing first-class support for portable packages, where multiple versions can be installed
side-by-side and even moved between machines without reinstallation.


BASIC USAGE

Install a package (press `Ctrl+Space` while typing to get a list of matching packages):

    pog <PackageName>

Update a package to the latest version:

    pog <PackageName> # same as first-time installation

Install a specific version of a package:

    pog <PackageName> <Version>

Force re-installation of a package:

    By default, if you invoke `pog <PackageName>` and the package already contains the manifest for the latest
    version, the command will not do anything. To recover in case some installation step fails, you might need
    to force Pog to reinstall the package:

    pog <PackageName> -Force

Install two separate copies of a package:

    # latest version of 7zip under the default name `7zip`
    pog 7zip
    # version 19.0 under the name `7zip-19.0`
    pog 7zip 19.0 -TargetName 7zip-19.0

Uninstall a package:

    Uninstall-Pog <PackageName>

List packages:

    Get-Pog # list installed packages
    Find-Pog # list available packages

Modify the list of portable package directories (opens a text editor):

    Edit-PogRootList

Create a new local package:

    New-PogPackage <PackageName>

Use a custom package repository:

    Set-PogRepository <Path> # to use a local repository
    Set-PogRepository <Uri> # to use a remote repository

Use multiple package repositories:

    # pass a list of repositories, either local paths or URIs
    Set-PogRepository "D:\...", "https://..."

Setup and export a local package (local-only or already installed):

    Enable-Pog <PackageName> -PassThru | Export-Pog

Get help for any Pog command using the PowerShell help system:

    man <CommandName>